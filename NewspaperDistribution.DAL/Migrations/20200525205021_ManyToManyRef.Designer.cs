// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewspaperDistribution.DAL;

namespace NewspaperDistribution.DAL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200525205021_ManyToManyRef")]
    partial class ManyToManyRef
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NewspaperDistribution.Domain.Models.NewspaperModel", b =>
                {
                    b.Property<int>("NewspaperId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName");

                    b.Property<decimal>("SubscriptionPrice");

                    b.Property<string>("Title");

                    b.HasKey("NewspaperId");

                    b.ToTable("Newspapers");
                });

            modelBuilder.Entity("NewspaperDistribution.Domain.Models.NewspaperPostalOfficeRelation", b =>
                {
                    b.Property<int>("NewspaperPostalOfficeRelationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NewspaperId");

                    b.Property<int>("PostOfficeId");

                    b.Property<int?>("PostalOfficeModelPostalOfficeId");

                    b.HasKey("NewspaperPostalOfficeRelationId");

                    b.HasIndex("NewspaperId");

                    b.HasIndex("PostalOfficeModelPostalOfficeId");

                    b.ToTable("NewspaperPostalOfficeRelation");
                });

            modelBuilder.Entity("NewspaperDistribution.Domain.Models.NewspaperPrintingHouseRelation", b =>
                {
                    b.Property<int>("NewspaperPrintingHouseRelationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NewspaperId");

                    b.Property<int>("PrintingHouseId");

                    b.HasKey("NewspaperPrintingHouseRelationId");

                    b.HasIndex("NewspaperId");

                    b.HasIndex("PrintingHouseId");

                    b.ToTable("NewspaperPrintingHouseRelation");
                });

            modelBuilder.Entity("NewspaperDistribution.Domain.Models.PostalOfficeModel", b =>
                {
                    b.Property<int>("PostalOfficeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("OfficeNumber");

                    b.HasKey("PostalOfficeId");

                    b.ToTable("PostalOffices");
                });

            modelBuilder.Entity("NewspaperDistribution.Domain.Models.PrintingHouseModel", b =>
                {
                    b.Property<int>("PrintingHouseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("MaxCirculation");

                    b.Property<string>("Title");

                    b.HasKey("PrintingHouseId");

                    b.ToTable("PrintingHouses");
                });

            modelBuilder.Entity("NewspaperDistribution.Domain.Models.NewspaperPostalOfficeRelation", b =>
                {
                    b.HasOne("NewspaperDistribution.Domain.Models.NewspaperModel", "NewspaperModel")
                        .WithMany("NewspaperPostalOfficeRelation")
                        .HasForeignKey("NewspaperId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NewspaperDistribution.Domain.Models.PostalOfficeModel", "PostalOfficeModel")
                        .WithMany("NewspaperPostalOfficeRelation")
                        .HasForeignKey("PostalOfficeModelPostalOfficeId");
                });

            modelBuilder.Entity("NewspaperDistribution.Domain.Models.NewspaperPrintingHouseRelation", b =>
                {
                    b.HasOne("NewspaperDistribution.Domain.Models.NewspaperModel", "NewspaperModel")
                        .WithMany("NewspaperPrintingHouseRelation")
                        .HasForeignKey("NewspaperId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NewspaperDistribution.Domain.Models.PrintingHouseModel", "PrintingHouseModel")
                        .WithMany("NewspaperPrintingHouseRelation")
                        .HasForeignKey("PrintingHouseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
